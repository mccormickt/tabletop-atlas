/* tslint:disable */
/* eslint-disable */
/**
 * Tabletop Atlas API
 * API for managing board games, house rules, and AI-powered chat
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateHouseRuleRequest
 */
export interface UpdateHouseRuleRequest {
    /**
     * 
     * @type {string}
     * @memberof UpdateHouseRuleRequest
     */
    category?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateHouseRuleRequest
     */
    description?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateHouseRuleRequest
     */
    isActive?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof UpdateHouseRuleRequest
     */
    title?: string | null;
}

/**
 * Check if a given object implements the UpdateHouseRuleRequest interface.
 */
export function instanceOfUpdateHouseRuleRequest(value: object): value is UpdateHouseRuleRequest {
    return true;
}

export function UpdateHouseRuleRequestFromJSON(json: any): UpdateHouseRuleRequest {
    return UpdateHouseRuleRequestFromJSONTyped(json, false);
}

export function UpdateHouseRuleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateHouseRuleRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'category': json['category'] == null ? undefined : json['category'],
        'description': json['description'] == null ? undefined : json['description'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'title': json['title'] == null ? undefined : json['title'],
    };
}

export function UpdateHouseRuleRequestToJSON(json: any): UpdateHouseRuleRequest {
    return UpdateHouseRuleRequestToJSONTyped(json, false);
}

export function UpdateHouseRuleRequestToJSONTyped(value?: UpdateHouseRuleRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'category': value['category'],
        'description': value['description'],
        'is_active': value['isActive'],
        'title': value['title'],
    };
}

