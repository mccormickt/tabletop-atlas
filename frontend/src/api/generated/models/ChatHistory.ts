/* tslint:disable */
/* eslint-disable */
/**
 * Tabletop Atlas API
 * API for managing board games, house rules, and AI-powered chat
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChatMessage } from './ChatMessage';
import {
    ChatMessageFromJSON,
    ChatMessageFromJSONTyped,
    ChatMessageToJSON,
    ChatMessageToJSONTyped,
} from './ChatMessage';
import type { ChatSession } from './ChatSession';
import {
    ChatSessionFromJSON,
    ChatSessionFromJSONTyped,
    ChatSessionToJSON,
    ChatSessionToJSONTyped,
} from './ChatSession';

/**
 * 
 * @export
 * @interface ChatHistory
 */
export interface ChatHistory {
    /**
     * 
     * @type {Array<ChatMessage>}
     * @memberof ChatHistory
     */
    messages: Array<ChatMessage>;
    /**
     * 
     * @type {ChatSession}
     * @memberof ChatHistory
     */
    session: ChatSession;
}

/**
 * Check if a given object implements the ChatHistory interface.
 */
export function instanceOfChatHistory(value: object): value is ChatHistory {
    if (!('messages' in value) || value['messages'] === undefined) return false;
    if (!('session' in value) || value['session'] === undefined) return false;
    return true;
}

export function ChatHistoryFromJSON(json: any): ChatHistory {
    return ChatHistoryFromJSONTyped(json, false);
}

export function ChatHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatHistory {
    if (json == null) {
        return json;
    }
    return {
        
        'messages': ((json['messages'] as Array<any>).map(ChatMessageFromJSON)),
        'session': ChatSessionFromJSON(json['session']),
    };
}

export function ChatHistoryToJSON(json: any): ChatHistory {
    return ChatHistoryToJSONTyped(json, false);
}

export function ChatHistoryToJSONTyped(value?: ChatHistory | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'messages': ((value['messages'] as Array<any>).map(ChatMessageToJSON)),
        'session': ChatSessionToJSON(value['session']),
    };
}

