/* tslint:disable */
/* eslint-disable */
/**
 * Tabletop Atlas API
 * API for managing board games, house rules, and AI-powered chat
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SearchResult
 */
export interface SearchResult {
    /**
     * 
     * @type {number}
     * @memberof SearchResult
     */
    chunkId: number;
    /**
     * 
     * @type {number}
     * @memberof SearchResult
     */
    chunkIndex: number;
    /**
     * 
     * @type {string}
     * @memberof SearchResult
     */
    chunkText: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResult
     */
    metadata: string;
    /**
     * 
     * @type {number}
     * @memberof SearchResult
     */
    similarityScore: number;
}

/**
 * Check if a given object implements the SearchResult interface.
 */
export function instanceOfSearchResult(value: object): value is SearchResult {
    if (!('chunkId' in value) || value['chunkId'] === undefined) return false;
    if (!('chunkIndex' in value) || value['chunkIndex'] === undefined) return false;
    if (!('chunkText' in value) || value['chunkText'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    if (!('similarityScore' in value) || value['similarityScore'] === undefined) return false;
    return true;
}

export function SearchResultFromJSON(json: any): SearchResult {
    return SearchResultFromJSONTyped(json, false);
}

export function SearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResult {
    if (json == null) {
        return json;
    }
    return {
        
        'chunkId': json['chunk_id'],
        'chunkIndex': json['chunk_index'],
        'chunkText': json['chunk_text'],
        'metadata': json['metadata'],
        'similarityScore': json['similarity_score'],
    };
}

export function SearchResultToJSON(json: any): SearchResult {
    return SearchResultToJSONTyped(json, false);
}

export function SearchResultToJSONTyped(value?: SearchResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chunk_id': value['chunkId'],
        'chunk_index': value['chunkIndex'],
        'chunk_text': value['chunkText'],
        'metadata': value['metadata'],
        'similarity_score': value['similarityScore'],
    };
}

