/* tslint:disable */
/* eslint-disable */
/**
 * Tabletop Atlas API
 * API for managing board games, house rules, and AI-powered chat
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SearchResult } from './SearchResult';
import {
    SearchResultFromJSON,
    SearchResultFromJSONTyped,
    SearchResultToJSON,
    SearchResultToJSONTyped,
} from './SearchResult';

/**
 * 
 * @export
 * @interface RulesSearchResponse
 */
export interface RulesSearchResponse {
    /**
     * 
     * @type {number}
     * @memberof RulesSearchResponse
     */
    gameId: number;
    /**
     * 
     * @type {string}
     * @memberof RulesSearchResponse
     */
    query: string;
    /**
     * 
     * @type {Array<SearchResult>}
     * @memberof RulesSearchResponse
     */
    results: Array<SearchResult>;
    /**
     * 
     * @type {number}
     * @memberof RulesSearchResponse
     */
    totalResults: number;
}

/**
 * Check if a given object implements the RulesSearchResponse interface.
 */
export function instanceOfRulesSearchResponse(value: object): value is RulesSearchResponse {
    if (!('gameId' in value) || value['gameId'] === undefined) return false;
    if (!('query' in value) || value['query'] === undefined) return false;
    if (!('results' in value) || value['results'] === undefined) return false;
    if (!('totalResults' in value) || value['totalResults'] === undefined) return false;
    return true;
}

export function RulesSearchResponseFromJSON(json: any): RulesSearchResponse {
    return RulesSearchResponseFromJSONTyped(json, false);
}

export function RulesSearchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RulesSearchResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'gameId': json['game_id'],
        'query': json['query'],
        'results': ((json['results'] as Array<any>).map(SearchResultFromJSON)),
        'totalResults': json['total_results'],
    };
}

export function RulesSearchResponseToJSON(json: any): RulesSearchResponse {
    return RulesSearchResponseToJSONTyped(json, false);
}

export function RulesSearchResponseToJSONTyped(value?: RulesSearchResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'game_id': value['gameId'],
        'query': value['query'],
        'results': ((value['results'] as Array<any>).map(SearchResultToJSON)),
        'total_results': value['totalResults'],
    };
}

