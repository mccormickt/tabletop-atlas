/* tslint:disable */
/* eslint-disable */
/**
 * Tabletop Atlas API
 * API for managing board games, house rules, and AI-powered chat
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateChatSessionRequest
 */
export interface CreateChatSessionRequest {
    /**
     * 
     * @type {number}
     * @memberof CreateChatSessionRequest
     */
    gameId: number;
    /**
     * 
     * @type {string}
     * @memberof CreateChatSessionRequest
     */
    title?: string | null;
}

/**
 * Check if a given object implements the CreateChatSessionRequest interface.
 */
export function instanceOfCreateChatSessionRequest(value: object): value is CreateChatSessionRequest {
    if (!('gameId' in value) || value['gameId'] === undefined) return false;
    return true;
}

export function CreateChatSessionRequestFromJSON(json: any): CreateChatSessionRequest {
    return CreateChatSessionRequestFromJSONTyped(json, false);
}

export function CreateChatSessionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateChatSessionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'gameId': json['game_id'],
        'title': json['title'] == null ? undefined : json['title'],
    };
}

export function CreateChatSessionRequestToJSON(json: any): CreateChatSessionRequest {
    return CreateChatSessionRequestToJSONTyped(json, false);
}

export function CreateChatSessionRequestToJSONTyped(value?: CreateChatSessionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'game_id': value['gameId'],
        'title': value['title'],
    };
}

