/* tslint:disable */
/* eslint-disable */
/**
 * Tabletop Atlas API
 * API for managing board games, house rules, and AI-powered chat
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HouseRule
 */
export interface HouseRule {
    /**
     * 
     * @type {string}
     * @memberof HouseRule
     */
    category?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof HouseRule
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof HouseRule
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof HouseRule
     */
    gameId: number;
    /**
     * 
     * @type {number}
     * @memberof HouseRule
     */
    id: number;
    /**
     * 
     * @type {boolean}
     * @memberof HouseRule
     */
    isActive: boolean;
    /**
     * 
     * @type {string}
     * @memberof HouseRule
     */
    title: string;
    /**
     * 
     * @type {Date}
     * @memberof HouseRule
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the HouseRule interface.
 */
export function instanceOfHouseRule(value: object): value is HouseRule {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('gameId' in value) || value['gameId'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('isActive' in value) || value['isActive'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function HouseRuleFromJSON(json: any): HouseRule {
    return HouseRuleFromJSONTyped(json, false);
}

export function HouseRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): HouseRule {
    if (json == null) {
        return json;
    }
    return {
        
        'category': json['category'] == null ? undefined : json['category'],
        'createdAt': (new Date(json['created_at'])),
        'description': json['description'],
        'gameId': json['game_id'],
        'id': json['id'],
        'isActive': json['is_active'],
        'title': json['title'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function HouseRuleToJSON(json: any): HouseRule {
    return HouseRuleToJSONTyped(json, false);
}

export function HouseRuleToJSONTyped(value?: HouseRule | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'category': value['category'],
        'created_at': ((value['createdAt']).toISOString()),
        'description': value['description'],
        'game_id': value['gameId'],
        'id': value['id'],
        'is_active': value['isActive'],
        'title': value['title'],
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

