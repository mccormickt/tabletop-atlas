/* tslint:disable */
/* eslint-disable */
/**
 * Tabletop Atlas API
 * API for managing board games, house rules, and AI-powered chat
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HouseRule } from './HouseRule';
import {
    HouseRuleFromJSON,
    HouseRuleFromJSONTyped,
    HouseRuleToJSON,
    HouseRuleToJSONTyped,
} from './HouseRule';

/**
 * 
 * @export
 * @interface PaginatedResponseForHouseRule
 */
export interface PaginatedResponseForHouseRule {
    /**
     * 
     * @type {Array<HouseRule>}
     * @memberof PaginatedResponseForHouseRule
     */
    items: Array<HouseRule>;
    /**
     * 
     * @type {number}
     * @memberof PaginatedResponseForHouseRule
     */
    limit: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedResponseForHouseRule
     */
    page: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedResponseForHouseRule
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedResponseForHouseRule
     */
    totalPages: number;
}

/**
 * Check if a given object implements the PaginatedResponseForHouseRule interface.
 */
export function instanceOfPaginatedResponseForHouseRule(value: object): value is PaginatedResponseForHouseRule {
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('limit' in value) || value['limit'] === undefined) return false;
    if (!('page' in value) || value['page'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    return true;
}

export function PaginatedResponseForHouseRuleFromJSON(json: any): PaginatedResponseForHouseRule {
    return PaginatedResponseForHouseRuleFromJSONTyped(json, false);
}

export function PaginatedResponseForHouseRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedResponseForHouseRule {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(HouseRuleFromJSON)),
        'limit': json['limit'],
        'page': json['page'],
        'total': json['total'],
        'totalPages': json['total_pages'],
    };
}

export function PaginatedResponseForHouseRuleToJSON(json: any): PaginatedResponseForHouseRule {
    return PaginatedResponseForHouseRuleToJSONTyped(json, false);
}

export function PaginatedResponseForHouseRuleToJSONTyped(value?: PaginatedResponseForHouseRule | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(HouseRuleToJSON)),
        'limit': value['limit'],
        'page': value['page'],
        'total': value['total'],
        'total_pages': value['totalPages'],
    };
}

